name: Build and Deploy to GKE

on:
  push:
    tags:
      - 'release-*'
  pull_request:
    types:
      - closed

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: linu-cluster    # Add your cluster name here.
  GKE_ZONE: asia-south1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: python-app # Add your deployment name here.
  IMAGE: python-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - run: |-
          gcloud --quiet auth configure-docker asia-south1-docker.pkg.dev

      - uses: 'google-github-actions/auth@v1'
        with:
          service_account: '${{ secrets.GKE_SA_AC}}'
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      # Get the GKE credentials so we can deploy to the cluster
      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          credentials: ${{ secrets.GKE_SA_KEY }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ secrets.GKE_PROJECT }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:${{ github.ref }}" \
            --build-arg GITHUB_REF="${{ github.ref }}" \
            .

      # Push the Docker image to Google Cloud Registry
      - name: Publish
        run: |-
          docker push "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:${{ github.ref }}"

      # Check if the push event is a release tag
      - name: Check Release Tag
        id: check_release_tag
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ startsWith(github.ref, 'refs/tags/release-') }}" == "true" ]]; then
            echo "Release tag detected: ${{ github.ref }}"
            echo "::set-output name=release-tag::true"
          else
            echo "Not a release tag."
            echo "::set-output name=release-tag::false"
          fi

      # Check if the pull request is merged to the master branch
      - name: Check PR Merge
        id: check_pr_merge
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master' }}
        run: |
          echo "PR merged to master branch."
          echo "::set-output name=pr-merged::true"

      # Deploy the Docker image to the GKE cluster if both conditions are met
      - name: Deploy
        if: steps.check_release_tag.outputs.release-tag == 'true' && steps.check_pr_merge.outputs.pr-merged == 'true'
        run: |
          sed -i -e "s~IMAGE_TAG~${{ github.ref }}~" ${{ github.workspace }}/.github/manifests/deployment.yaml
          sed -i -e "s~DEPLOYMENT_NAME~${{ env.DEPLOYMENT_NAME }}~" ${{ github.workspace }}/.github/manifests/deployment.yaml
          kubectl apply -f ${{ github.workspace }}/.github/manifests/deployment.yaml --record
          kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME }}
