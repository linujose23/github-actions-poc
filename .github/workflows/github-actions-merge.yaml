name: Deploy to GKE and Push to Artifact Registry

on:
  pull_request:
    types:
      - closed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check for merged PR
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}
          script: |
            const pr = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number
            });
            if (pr.data.merged && pr.data.base.ref.startsWith('release/')) {
              console.log('PR merged with a release tag');
              return true;
            } else {
              console.log('PR not merged with a release tag. Skipping deployment and image push.');
              return false;
            }

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure GCP environment
        uses: google-github-actions/setup-gcloud@v0.4.0
        with:
          project_id: YOUR_PROJECT_ID
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gcr.io/${{ secrets.GKE_PROJECT }}/your-image-name:${{ github.sha }}

      - name: Authenticate to GKE
        run: gcloud container clusters get-credentials YOUR_CLUSTER_NAME --region YOUR_REGION

      - name: Check if deployment exists
        id: check-deployment
        run: |
          if kubectl get deployment/your-deployment -n your-namespace &> /dev/null; then
            echo "::set-output name=exists::true"
          else
            echo "::set-output name=exists::false"
          fi

      - name: Rollout restart or apply deployment
        run: |
          if
            kubectl apply -f .github/deploy/deployment.yaml
          else [[ "${{ steps.check-deployment.outputs.exists }}" == "true" ]]; then
          kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME }}
          fi
