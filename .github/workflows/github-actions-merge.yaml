name: Merge and Deploy on Tagged PR

on:
  pull_request:
    types:
      - closed

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: linu-cluster    # Add your cluster name here.
  GKE_ZONE: asia-south1-a   # Add your cluster zone here.
  DEPLOYMENT_NAME: python-app # Add your deployment name here.
  IMAGE: python-app

jobs:
  merge-and-deploy:
    name: Merge and Deploy
    runs-on: ubuntu-latest
    environment: development

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get Short SHA
        id: get_short_sha
        run: echo "::set-output name=short_sha::${{ github.sha }}"

      - name: Merge PR
        if: startsWith(github.event.pull_request.head.ref, 'refs/pull/') && startsWith(github.event.pull_request.head.ref, 'refs/tags/release-')
        run: |
          git fetch origin ${GITHUB_REF}
          git checkout FETCH_HEAD -B merge-branch
          git checkout master
          git merge --no-ff merge-branch -m "Merge pull request #${{ github.event.pull_request.number }}"
          git push origin master
          git branch -D merge-branch

      - name: Deploy to GKE
        if: startsWith(github.event.pull_request.head.ref, 'refs/pull/') && startsWith(github.event.pull_request.head.ref, 'refs/tags/release-')
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - run: |-
          gcloud --quiet auth configure-docker asia-south1-docker.pkg.dev
          docker build \
            --tag "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:${{ steps.get_short_sha.outputs.short_sha }}" \
            --build-arg GITHUB_REF="${GITHUB_REF}" \
            .
          docker push "asia-south1-docker.pkg.dev/$PROJECT_ID/linu-poc-repo/$IMAGE:${{ steps.get_short_sha.outputs.short_sha }}"

      - uses: 'google-github-actions/auth@v1'
        with:
          service_account: '${{ secrets.GKE_SA_AC}}'
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          credentials: ${{ secrets.GKE_SA_KEY }}
          cluster_name: ${{ env.GKE_CLUSTER }}
          project_id: ${{ secrets.GKE_PROJECT }}
          location: ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          sed -i -e "s~IMAGE_TAG~${{ steps.get_short_sha.outputs.short_sha }}~" ${{ github.workspace }}/.github/manifests/deployment.yaml
          sed -i -e "s~DEPLOYMENT_NAME~${{ env.DEPLOYMENT_NAME }}~" ${{ github.workspace }}/.github/manifests/deployment.yaml
          kubectl apply -f ${{ github.workspace }}/.github/manifests/deployment.yaml --record
          kubectl rollout restart deployment/${{ env.DEPLOYMENT_NAME }}
